{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DB3 Network Docs","text":"<p>DB3 Network is an open-source and decentralized firebase firestore alternative to build fully decentralized dApps quickly with minimal engineering effort</p> <p> </p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#install","title":"Install","text":"<pre><code>curl --proto '=https' --tlsv1.2 -sSf https://up.db3.network/db3up_init.sh | sh\n</code></pre> Start the localnetJoin the devnetConnect to the devnet directly <pre><code>db3up localnet\n</code></pre> <p>open another terminal</p> <pre><code>db3 console --url http://127.0.0.1:26659\n</code></pre> <pre><code>db3up join_devnet\n</code></pre> <p>open another terminal</p> <pre><code>db3 console --url http://127.0.0.1:26659\n</code></pre> <p>joining the devnet will take a lot of time to sync data</p> <pre><code>db3 console --url https://grpc.devnet.db3.network\n</code></pre> <p>command not found</p> <p>please add the <code>~/.db3/bin</code> to the <code>PATH</code></p>"},{"location":"#create-a-local-keypair","title":"Create a local keypair","text":"<p><pre><code>db3&gt;-$ init\n address                                    | scheme\n--------------------------------------------+-----------\n 0x96bdb8e20fbd831fcb37dde9f81930a82ab5436b | secp256k1\n</code></pre> this command will create a key used for signing mutations</p>"},{"location":"#create-a-database","title":"Create a Database","text":"<pre><code>db3&gt;-$ new-db\n database address                           | transaction id\n--------------------------------------------+----------------------------------------------\n 0xffe0f0ea53dd3ccf6de1fc046a0f8eb68f98dded | ZJqQkwULNOuyVeeECGoHIHusyFTghsTWVJYMsg1afZM=\ndb3&gt;-$ show-db --addr 0xffe0f0ea53dd3ccf6de1fc046a0f8eb68f98dded\n database address                           | sender address                             | related transactions                        | collections\n--------------------------------------------+--------------------------------------------+----------------------------------------------+-------------\n 0xffe0f0ea53dd3ccf6de1fc046a0f8eb68f98dded | 0x96bdb8e20fbd831fcb37dde9f81930a82ab5436b | ZJqQkwULNOuyVeeECGoHIHusyFTghsTWVJYMsg1afZM= |\n</code></pre>"},{"location":"#create-a-collection","title":"Create a Collection","text":"<p><pre><code>db3&gt;-$  new-collection --addr 0xffe0f0ea53dd3ccf6de1fc046a0f8eb68f98dded  --name books --index '{\"name\":\"idx1\",\"fields\":[{\"field_path\":\"name\",\"value_mode\":{\"Order\":1}}]}'\nsend add collection done with tx\n3lY5/WKRw53x33UUZ6gCvsN4axLrdcf9PD41HqNIOYA=\ndb3&gt;-$ show-collection --addr 0xffe0f0ea53dd3ccf6de1fc046a0f8eb68f98dded\n name  | index\n-------+----------------------------------------------------------------------------\n books | {\"name\":\"idx1\",\"fields\":[{\"field_path\":\"name\",\"value_mode\":{\"Order\":1}}]}\n</code></pre> create a collection with name <code>books</code> and an index named <code>idx1</code> in database</p>"},{"location":"#create-a-document","title":"Create a Document","text":"<pre><code>db3&gt;-$ new-doc --addr 0x997f631fcafeed5ee319c83683ae16e64783602b --collection-name books --documents '{\"name\": \"John Doe\",\"age\": 43,\"phones\": [\"+44 1234567\",\"+44 2345678\"]}'\nsend add document done with tx\n+O9cK2cHLexZQvIITk4OTm8SxBhq7Yz7g+xZYiionWo=\n</code></pre>"},{"location":"#using-db3js","title":"Using db3.js","text":""},{"location":"#install_1","title":"Install","text":"Install with YarnInstall with Npm <pre><code>yarn add db3.js\n</code></pre> <pre><code>npm install db3.js\n</code></pre>"},{"location":"#hello-db3js","title":"Hello db3.js","text":"<pre><code>// create a db3 browser wallet \nconst mnemonic =\n'result crisp session latin must fruit genuine question prevent start coconut brave speak student dismiss'\nconst wallet = DB3BrowserWallet.createNew(mnemonic, 'DB3_SECP256K1')\n\n// you can use metamask to connect db3 network with the following code\n// const wallet = new MetamaskWallet(window)\n\n// create a database\nconst [dbId, txId] = await client.createDatabase()\n\n// connect a database with address\nconst {db} = initializeDB3('http://127.0.0.1:26659', dbId, wallet)\n\nconst indexList: Index[] = [\n{\nname: 'idx1',\nid: 1,\nfields: [\n{\nfieldPath: 'owner',\nvalueMode: {\noneofKind: 'order',\norder: Index_IndexField_Order.ASCENDING,\n},\n},\n],\n},\n]\n// create a collection with index and the following interface `Todo`\n//\n//interface Todo {\n//    text: string\n//    owner: string\n//}\n//\nconst collectionRef = await collection&lt;Todo&gt;(db, 'todos', indexList)\n\n// add a todo\nconst result = await addDoc&lt;Todo&gt;(collectionRef, {\ntext: 'beijing',\nowner: wallet.getAddress(),\n} as Todo)\n</code></pre>"},{"location":"#demos","title":"Demos","text":"<ul> <li>hello world with metamask</li> <li>todomvc</li> <li>create a database</li> <li>create a collection</li> </ul>"}]}